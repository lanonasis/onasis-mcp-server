name: Deploy to VPS (Improved)

on:
  push:
    branches: [ main, deploy-setup ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy MCP Server to VPS
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.bun/install/cache
        key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
        restore-keys: |
          ${{ runner.os }}-bun-
        
    - name: Install dependencies
      run: bun install --frozen-lockfile
      
    - name: Build TypeScript
      id: build
      run: |
        echo "🔨 Building TypeScript..."
        if bun run build; then
          echo "✅ Build successful"
          echo "success=true" >> $GITHUB_OUTPUT
          echo "BUILD_STATUS=✅ SUCCESS" >> $GITHUB_ENV
          
          # Verify build output
          if [ -d "dist" ]; then
            echo "📁 Build output:"
            ls -la dist/
          fi
        else
          echo "success=false" >> $GITHUB_OUTPUT
          echo "BUILD_STATUS=⚠️ FAILED" >> $GITHUB_ENV
          echo "⚠️ Build failed - TypeScript compilation issues"
          echo "⚠️  Using existing ecosystem.config.js for deployment"
        fi

    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        port: ${{ secrets.VPS_PORT }}
        username: ${{ secrets.VPS_USERNAME || 'root' }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "🚀 Starting deployment to VPS..."
          
          # Set deployment variables
          DEPLOY_PATH="${{ secrets.DEPLOY_PATH || '/opt/mcp-servers/lanonasis-standalone' }}"
          SERVICE_NAME="lanonasis-mcp-server"
          
          # Navigate to deployment directory
          cd $DEPLOY_PATH
          
          # Pull latest changes
          echo "📥 Pulling latest changes..."
          git pull origin main
          
          # Install dependencies
          echo "📦 Installing dependencies..."
          bun install --production
          
          # Start/restart the service using ecosystem.config.js
          echo "🔄 Starting MCP server..."
          if [ -f "ecosystem.config.js" ]; then
            pm2 start ecosystem.config.js --env production
            echo "✅ MCP server started with ecosystem config"
          else
            echo "❌ ecosystem.config.js not found"
            exit 1
          fi
          
          # Verify service status
          echo "📊 Service status:"
          pm2 status
          
          # Health check
          echo "🏥 Performing health check..."
          sleep 5
          if curl -f http://localhost:3001/health > /dev/null 2>&1; then
            echo "✅ Health check passed"
          else
            echo "⚠️ Health check failed - service may need time to start"
          fi
          
          echo "🎉 Deployment completed successfully!"

    - name: Deployment Summary
      if: always()
      run: |
        echo "## 🚀 VPS Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Build Status**: ${{ steps.build.outputs.success == 'true' && '✅ Success' || '⚠️ Failed (using existing config)' }}" >> $GITHUB_STEP_SUMMARY
        echo "**Deployment Target**: ${{ secrets.VPS_HOST }}:${{ secrets.VPS_PORT }}" >> $GITHUB_STEP_SUMMARY
        echo "**Deploy Path**: ${{ secrets.DEPLOY_PATH || '/opt/mcp-servers/lanonasis-standalone' }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.build.outputs.success }}" == "true" ]; then
          echo "### 📋 What was deployed:" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Fresh TypeScript build" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Updated dependencies" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ PM2 ecosystem configuration" >> $GITHUB_STEP_SUMMARY
        else
          echo "### 📋 Deployment used:" >> $GITHUB_STEP_SUMMARY
          echo "- ⚠️ Existing build artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Updated dependencies" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ PM2 ecosystem configuration" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔧 Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "- Monitor VPS logs for any runtime issues" >> $GITHUB_STEP_SUMMARY
        echo "- Verify MCP server is responding on port 3001" >> $GITHUB_STEP_SUMMARY
        echo "- Check PM2 status: \`pm2 status\`" >> $GITHUB_STEP_SUMMARY
